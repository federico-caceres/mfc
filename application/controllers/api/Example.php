<?php

defined('BASEPATH') || exit('No direct script access allowed');

// This can be removed if you use __autoload() in config.php OR use Modular Extensions
/** @noinspection PhpIncludeInspection */
require APPPATH . '/libraries/REST_Controller.php';

/**
 * This is an example of a few basic user interaction methods you could use
 * all done with a hardcoded array
 *
 * @package         CodeIgniter
 * @subpackage      Rest Server
 * @category        Controller
 * @author          Phil Sturgeon, Chris Kacerguis
 * @license         MIT
 * @link            https://github.com/chriskacerguis/codeigniter-restserver
 */
class Example extends REST_Controller {

    function __construct() {
        // Construct the parent class
        parent::__construct();

        // Configure limits on our controller methods
        // Ensure you have created the 'limits' table && enabled 'limits' within application/config/rest.php
        $this->methods['addContact_get']['limit'] = 500; // 500 requests per hour per user/key
        $this->methods['addContact_post']['limit'] = 100; // 100 requests per hour per user/key
        $this->methods['addContact_delete']['limit'] = 50; // 50 requests per hour per user/key
    }

    public function addContact_get() {
        // Users from a data store e.g. database
        $users = [
            ['id' => 1, 'name' => 'John', 'email' => 'john@example.com', 'fact' => 'Loves coding'],
            ['id' => 2, 'name' => 'Jim', 'email' => 'jim@example.com', 'fact' => 'Developed on CodeIgniter'],
            ['id' => 3, 'name' => 'Jane', 'email' => 'jane@example.com', 'fact' => 'Lives in the USA', ['hobbies' => ['guitar', 'cycling']]],
        ];

        $id = $this->input->get('id');

        // If the id parameter doesn't exist return all the users

        if ($id === NULL) {
            // Check if the users data store contains users (in case the database result returns NULL)
            if ($users) {
                // Set the response && exit
                $this->response($users, REST_Controller::HTTP_OK); // OK (200) being the HTTP response code
            } else {
                // Set the response && exit
                $this->response([
                    'status' => FALSE,
                    'message' => 'No users were found'
                        ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
            }
        }

        // Find && return a single record for a particular user.

        $id = (int) $id;

        // Validate the id.
        if ($id <= 0) {
            // Invalid id, set the response && exit.
            $this->response(NULL, REST_Controller::HTTP_BAD_REQUEST); // BAD_REQUEST (400) being the HTTP response code
        }

        // Get the user from the array, using the id as key for retrieval.
        // Usually a model is to be used for this.

        $user = NULL;

        if (!empty($users)) {
            foreach ($users as $key => $value) {
                if (isset($value['id']) && $value['id'] === $id) {
                    $user = $value;
                }
            }
        }

        if (!empty($user)) {
            $this->set_response($user, REST_Controller::HTTP_OK); // OK (200) being the HTTP response code
        } else {
            $this->set_response([
                'status' => FALSE,
                'message' => 'User could not be found'
                    ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
        }
    }

    public function addContact_post() {
//        // $this->some_model->update_user( ... );
//        $message = [
//            'id' => 100, // Automatically generated by the model
//            'name' => $this->post('name'),
//            'email' => $this->post('email'),
//            'message' => 'Added a resource'
//        ];
//$id = $this->post('idCliente');
//
//        $this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code

        try {
//            var_dump($this->post());
//            var_dump($_POST);
//            die("Muere");
            $datos = $this->post('idCliente');
            $datosInfo = "No se recibieron datos por POST";
            if (isset($datos)) {
                $idCliente = ($this->post('idCliente')) ? $this->post('idCliente') : "";
                $idCampana = ($this->post('idCampana')) ? $this->post('idCampana') : "";
                $codeCliente = ($this->post('codeCliente')) ? $this->post('codeCliente') : "";
                $nroDoc = ($this->post('nroDoc')) ? $this->post('nroDoc') : "";
                $apellido = ($this->post('apellido')) ? $this->post('apellido') : "";
                $nombre = ($this->post('nombre')) ? $this->post('nombre') : "";
                $estadoCivil = ($this->post('estadoCivil')) ? $this->post('estadoCivil') : "";
                $sexo = ($this->post('sexo')) ? $this->post('sexo') : "";
                $fechaNac = ($this->post('fechaNac')) ? $this->post('fechaNac') : "-1";
                $edad = ($this->post('edad')) ? $this->post('edad') : "";
                $profesion = ($this->post('profesion')) ? $this->post('profesion') : "";
                $segmento = ($this->post('segmento')) ? $this->post('segmento') : "";
                $shot = ($this->post('shot')) ? $this->post('shot') : "0";
                $tarjeta = ($this->post('tarjeta')) ? $this->post('tarjeta') : "";
                $nroTarjeta = ($this->post('nroTarjeta')) ? $this->post('nroTarjeta') : "";
                $vtoTarjeta = ($this->post('vtoTarjeta')) ? $this->post('vtoTarjeta') : "";
                $calle = ($this->post('calle')) ? $this->post('calle') : "";
                $nroCasa = ($this->post('nroCasa')) ? $this->post('nroCasa') : "";
                $piso = ($this->post('piso')) ? $this->post('piso') : "";
                $dpto = ($this->post('dpto')) ? $this->post('dpto') : "";
                $localidad = ($this->post('localidad')) ? $this->post('localidad') : "";
                $ciudad = ($this->post('ciudad')) ? $this->post('ciudad') : "";
                $barrio = ($this->post('barrio')) ? $this->post('barrio') : "";
                $codPostal = ($this->post('codPostal')) ? $this->post('codPostal') : "";
                $provincia = ($this->post('provincia')) ? $this->post('provincia') : "";
                $prefijoTel1 = ($this->post('prefijoTel1')) ? $this->post('prefijoTel1') : "";
                $telefono1 = ($this->post('telefono1')) ? $this->post('telefono1') : "";
                $prefijoTel2 = ($this->post('prefijoTel2')) ? $this->post('prefijoTel2') : "";
                $telefono2 = ($this->post('telefono2')) ? $this->post('telefono2') : "";
                $prefijoTel3 = ($this->post('prefijoTel3')) ? $this->post('prefijoTel3') : "";
                $telefono3 = ($this->post('telefono3')) ? $this->post('telefono3') : "";
                $prefijoTel4 = ($this->post('prefijoTel4')) ? $this->post('prefijoTel4') : "";
                $telefono4 = ($this->post('telefono4')) ? $this->post('telefono4') : "";
                $prefijoTel5 = ($this->post('prefijoTel5')) ? $this->post('prefijoTel5') : "";
                $telefono5 = ($this->post('telefono5')) ? $this->post('telefono5') : "";
                $prefijoTel6 = ($this->post('prefijoTel6')) ? $this->post('prefijoTel6') : "";
                $telefono6 = ($this->post('telefono6')) ? $this->post('telefono6') : "";
                $correo1 = ($this->post('correo1')) ? $this->post('correo1') : "";
                $correo2 = ($this->post('correo2')) ? $this->post('correo2') : "";
                $obsCuenta = ($this->post('obsCuenta')) ? $this->post('obsCuenta') : "";
                //$titulosAdicionales = ($this->post('titulosAdicionales')) ? $this->post('titulosAdicionales') : array();
                $Adicionales = ($this->post('Adicionales')) ? $this->post('Adicionales') : array();

                for ($reg = 1; $reg <= count($Adicionales); $reg++) {
                    $datos_adicionalesTitulos = array();
                    $datos_adicionalesInfos = array();
                    $datos_adicionales = array();
                    for ($a = 0; $a < count($Adicionales); $a++) {
                        $aux = new stdClass();
                        $aux->titulo = $Adicionales[$a]['titulo'];
                        $aux->info = $Adicionales[$a]['info'];
                        $datos_adicionales[] = $aux;
                        $datos_adicionalesTitulos[] = $Adicionales[$a]['titulo'];
                        $datos_adicionalesInfos[] = $Adicionales[$a]['info'];
                    }
                }
                $titulos = implode(';', $datos_adicionalesTitulos);
                $adicional = implode(';', $datos_adicionalesInfos);

                $datosTitulos = "codecliente; nro_doc; apellido; nombre; estado_civil; sexo; fecha_nac;edad; profesion; segmento; shot; tarjeta; nro_tarjeta; vto_tarjeta; calle; nro_casa; piso;depto; localidad; ciudad; barrio; cod_postal; provincia;prefijo_tel_1; telefono_1;prefijo_tel_2; telefono_2; prefijo_tel_3; telefono_3; prefijo_tel_4; telefono_4;prefijo_tel_5;telefono_5;prefijo_tel_6;telefono_6; correo1; correo2; obs_cuenta; " . $titulos;

                $datosInfo = "$codeCliente; $nroDoc; $apellido; $nombre; $estadoCivil; $sexo; $fechaNac; $edad; $profesion; $segmento; $shot; $tarjeta; $nroTarjeta; $vtoTarjeta; $calle; $nroCasa; $piso; $dpto; $localidad; $ciudad; $barrio; $codPostal; $provincia; $prefijoTel1; $telefono1; $prefijoTel2; $telefono2; $prefijoTel3; $telefono3; $prefijoTel4; $telefono4; $prefijoTel5; $telefono5; $prefijoTel6; $telefono6; $correo1; $correo2; $obsCuenta; $adicional";

                $errores = array();

                if ($nroDoc == "" || $nroDoc <= 0) {
                    $resultado['data'] = array(
                        'success' => FALSE,
                        'registros' => $datosInfo,
                        'error' => 'El nro de documento es obligatorio'
                    );
                    //echo json_encode($resultado);
                    $this->set_response($resultado, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
                } else if ($telefono1 == "") {
                    $resultado['data'] = array(
                        'success' => FALSE,
                        'registros' => $datosInfo,
                        'error' => 'El nro de telefono es obligatorio'
                    );
                    //echo json_encode($resultado);
                    $this->set_response($resultado, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
                } else {

                    $this->load->model("csv/m_csv");
                    $procesaTitulos = $this->m_csv->procesarBasePost($datosTitulos, $idCliente, $idCampana);
                    $errores[] = $procesaTitulos['error'];
                    if (!$procesaTitulos['error']) {
                        $procesaInfo = $this->m_csv->procesarBasePost($datosInfo, $idCliente, $idCampana);
                    } else {
                        $resultado['data'] = array(
                            'success' => FALSE,
                            'registros' => $titulosAdicionales,
                            'error' => 'Titulos incorrectos'
                        );
                    }
                    $errores[] = $procesaInfo['error'];

                    if (!$procesaInfo['error']) {

                        $registrosWS = array($idCliente, $idCampana, $codeCliente, $nroDoc, $apellido, $nombre, $estadoCivil, $sexo, $fechaNac, $edad, $profesion, $segmento, $shot, $tarjeta, $nroTarjeta
                            , $vtoTarjeta, $calle, $nroCasa, $piso, $dpto, $localidad, $ciudad, $barrio, $codPostal, $provincia, $prefijoTel1, $telefono1, $prefijoTel2
                            , $telefono2, $prefijoTel3, $telefono3, $prefijoTel4, $telefono4, $prefijoTel5, $telefono5, $prefijoTel6, $telefono6, $correo1, $correo2, $obsCuenta, $errores, $datos_adicionales);
                        $registros = array($registrosWS);

                        $levanta = $this->m_csv->levanta_a_base($registros, '');
                        $errores = $levanta['error'];
                        if ($errores) {
                            $resultado['data'] = array(
                                'success' => FALSE,
                                'registros' => $levanta['registros'],
                                'error' => 'Datos incorrectos'
                            );
                        } else {
//$insertaCola = $this->__insertaCcola($idCliente, $idCampana, $nroDoc, $shot);
//                        if ($insertaCola) {
//                            $resultado['data'] = array(
//                                'success' => TRUE,
//                                'registros' => $levanta['registros'],
//                                'error' => 'Datos correctos'
//                            );
//                        } else {
                            $resultado['data'] = array(
                                'success' => TRUE,
                                'registros' => $levanta['registros'],
                                'error' => 'Datos correctos en base'
                            );
// }
                        }
                    } else {
                        $resultado['data'] = array(
                            'success' => FALSE,
                            'registros' => $datosInfo,
                            'error' => 'Datos incorrectos'
                        );
                    }
                    $this->set_response($resultado, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
                    //echo json_encode($resultado);
                }
            } else {
                $resultado['data'] = array(
                    'success' => FALSE,
                    'registros' => $datosInfo,
                    'error' => 'Datos incorrectos'
                );
                //echo json_encode($resultado);
                $this->set_response($resultado, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
            }
        } catch (Exception $exc) {
            log_message("error", "Error en el webservice de insercion de base: " . $exc->getTraceAsString());
            //echo $exc->getTraceAsString();
            $this->set_response($exc->getTraceAsString(), REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
        }
    }

    public function addContact_delete() {
        $id = (int) $this->get('id');

        // Validate the id.
        if ($id <= 0) {
            // Set the response && exit
            $this->response(NULL, REST_Controller::HTTP_BAD_REQUEST); // BAD_REQUEST (400) being the HTTP response code
        }

        // $this->some_model->delete_something($id);
        $message = [
            'id' => $id,
            'message' => 'Deleted the resource'
        ];

        $this->set_response($message, REST_Controller::HTTP_NO_CONTENT); // NO_CONTENT (204) being the HTTP response code
    }

}
